#pragma checksum "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\ProcurementManager\Approval.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9f2009acf3b4af845cbf920f0116834ef9aadfeb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ProcurementManager_Approval), @"mvc.1.0.view", @"/Views/ProcurementManager/Approval.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\_ViewImports.cshtml"
using MAS.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\_ViewImports.cshtml"
using MAS.Client.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9f2009acf3b4af845cbf920f0116834ef9aadfeb", @"/Views/ProcurementManager/Approval.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"58438fb03bc46bda326dff31745fed6749c862ce", @"/Views/_ViewImports.cshtml")]
    public class Views_ProcurementManager_Approval : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("approvalForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\ProcurementManager\Approval.cshtml"
  
    Layout = "~/Views/Template/DashboardBase.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"/vendor/datatables/css/dataTables.bootstrap4.min.css\">\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Menu", async() => {
                WriteLiteral(@"
    <div class=""nav"">
        <div class=""sb-sidenav-menu-heading"">Procurement Manager</div>
        <a class=""nav-link"" href=""https://localhost:44342/employee"">
            <div class=""sb-nav-link-icon""><i class=""fas fa-home""></i></div>
            Dashboard
        </a>
        <a class=""nav-link"" href=""https://localhost:44342/manager/employee"">
            <div class=""sb-nav-link-icon""><i class=""fas fa-users""></i></div>
            Employee
        </a>
        <a class=""nav-link"" href=""https://localhost:44342/manager/approval"">
            <div class=""sb-nav-link-icon""><i class=""far fa-edit""></i></div>
            Manage Request
        </a>
    </div>
");
            }
            );
            WriteLiteral(@"
<nav>
    <div class=""nav nav-tabs"" id=""nav-tab"" role=""tablist"">
        <a class=""nav-link text-dark active"" id=""incoming-btn"" data-toggle=""tab"" href=""#data-tables""
           role=""tab"" aria-controls=""card-data"" aria-selected=""true"">Incoming</a>
        <a class=""nav-link text-dark"" id=""approved-btn"" data-toggle=""tab"" href=""#data-tables""
           role=""tab"" aria-controls=""card-data"" aria-selected=""true"">Approved</a>
        <a class=""nav-link text-dark"" id=""rejected-btn"" data-toggle=""tab"" href=""#data-tables""
           role=""tab"" aria-controls=""card-data"" aria-selected=""true"">Rejected</a>
    </div>
</nav>
<div class=""tab-content"" id=""nav-tabContent"">
    <div class=""tab-pane fade show active"" id=""data-tables"" role=""tabpanel"" aria-labelledby=""data-tables-tab"">
        <div class=""table-responsive mt-4"">
            <table class=""table table-bordered"" id=""myTable"" width=""100%"" cellspacing=""0"">
                <thead>
                    <tr>
                        <th>Id</th>
          ");
            WriteLiteral(@"              <th>Requested On</th>
                        <th>From</th>
                        <th>Until</th>
                        <th>Total Items</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Id</th>
                        <th>Requested On</th>
                        <th>From</th>
                        <th>Until</th>
                        <th>Total Items</th>
                        <th>Action</th>
                    </tr>
                </tfoot>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Start Modal -->
<div class=""modal fade"" id=""detailsModal"" data-backdrop=""static"" data-keyboard=""false"" tabindex=""-1""
     aria-labelledby=""detailsModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"">
        <div class=""modal-content"">
  ");
            WriteLiteral(@"          <div class=""modal-header"">
                <h5 class=""modal-title"" id=""detailsModalLabel"">Request Details</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" id=""closeModal"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <table cellpadding=""5"">
                    <tr>
                        <td>Request Id</td>
                        <td>:</td>
                        <td id=""setId""></td>
                    </tr>
                    <tr>
                        <td>Requested On</td>
                        <td>:</td>
                        <td id=""setRequestDate""></td>
                    </tr>
                    <tr>
                        <td>From</td>
                        <td>:</td>
                        <td id=""setFromDate""></td>
                    </tr>
                    <tr>
                        <td");
            WriteLiteral(@">Until</td>
                        <td>:</td>
                        <td id=""setUntilDate""></td>
                    </tr>
                </table>
                <hr>
                <h5>Items List</h5>
                <ol id=""itemList"">
                </ol>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9f2009acf3b4af845cbf920f0116834ef9aadfeb8580", async() => {
                WriteLiteral(@"
                    <div class=""form-group mb-3"">
                        <label for=""notes"">Notes</label>
                        <textarea class=""form-control"" id=""notes"" placeholder=""Notes..."" maxlength=""20""></textarea>
                    </div>
                    <input hidden id=""requestId"" name=""requestId"" />                  
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-sm btn-danger"" id=""rejected-submit"">Rejected</button>
                <button type=""button"" class=""btn btn-sm btn-success"" id=""approved-submit"">Approved</button>
            </div>
        </div>
    </div>
</div>
<!-- End Modal -->

");
            DefineSection("ScriptsLink", async() => {
                WriteLiteral("\r\n    <script src=\"/vendor/datatables/js/jquery.dataTables.min.js\"></script>\r\n    <script src=\"/vendor/datatables/js/dataTables.bootstrap4.min.js\"></script>\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("ScriptsDocReady", async() => {
                WriteLiteral(@"

        table = $('#myTable').DataTable({
            ""ajax"": {
                ""url"": ""https://localhost:44342/Request/manager/2/incoming"",
                ""datatype"": ""json"",
                ""dataSrc"": """"
            },
            ""columnDefs"": [
                {
                    ""targets"": [0, 1],
                    ""searchable"": true,
                    ""orderable"": true,
                },
                {
                    ""targets"": [2, 3, 4, 5],
                    ""searchable"": false,
                    ""orderable"": false
                }
            ],
            ""columns"": [
                {
                    ""data"": 'id'
                },
                {
                    ""data"": 'requestDate',
                    ""render"": function (data, type, row, meta) {
                        return moment(data, ""YYYY-MM-DD"").format(""DD MMMM YYYY"");
                    }
                },
                {
                    ""data"": 'loanDate',
       ");
                WriteLiteral(@"             ""render"": function (data, type, row, meta) {
                        return moment(data, ""YYYY-MM-DD"").format(""DD MMMM YYYY"");
                    }
                },
                {
                    ""data"": 'returnDate',
                    ""render"": function (data, type, row, meta) {
                        return moment(data, ""YYYY-MM-DD"").format(""DD MMMM YYYY"");
                    }
                },
                {
                    ""data"": 'itemRequest.length',
                },
                {
                    ""data"": 'id',
                    ""render"": function (data, type, row, meta) {
                        if (row.requestStatus == 1 && row.status == 1) {
                            return '<a href=""javascript:void(0)"" class=""btn btn-sm btn-light"" onclick=""Details(\'' + data + '\')""><i class=""far fa-check-square""></i></a>';
                        } else {
                            return '-';
                        }
                    }
   ");
                WriteLiteral(@"             }
            ]
        });

        $(""#incoming-btn"").click(function () {
            table.ajax.url('https://localhost:44342/Request/manager/2/incoming').load();
        });
        $(""#approved-btn"").click(function () {
            table.ajax.url('https://localhost:44342/Request/manager/2/approved').load();
        });
        $(""#rejected-btn"").click(function () {
            table.ajax.url('https://localhost:44342/Request/manager/2/rejected').load();
        });

        $(""#closeModal"").click(function () {
            ClearForm();
        });

       $(""#rejected-submit"").click(function(){        
        Submit(1);       
       });
       $(""#approved-submit"").click(function(){        
            Submit(2);       
       });
");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    
        function Details(id) {
            $.ajax({
                type: 'GET',
                url: 'https://localhost:44329/api/Request/' + id,
                data: 'data'
            }).done((result) => {
                if (result.status == ""Ok"") {
                    let hasil = """";
                    $('#detailsModal').modal('show');
                    $('#setId').html('#' + result.data.id);
                    $('#setRequestDate').html(moment(result.data.requestDate, ""YYYY-MM-DD"").format(""DD MMMM YYYY""));
                    $('#setFromDate').html(moment(result.data.loanDate, ""YYYY-MM-DD"").format(""DD MMMM YYYY""));
                    $('#setUntilDate').html(moment(result.data.returnDate, ""YYYY-MM-DD"").format(""DD MMMM YYYY""));
                    $.each(result.data.itemRequest, function (key, field) {
                        hasil += '<li>#' + field.asset.id + ' - ' + field.asset.name + '</li>';
                    });
                    $('#itemList').html(hasil);
        ");
                WriteLiteral(@"            $('#requestId').val(result.data.id);
                }
                else {
                    swal(""Failed to get data"", {
                        icon: ""warning"",
                    });
                }
            }).fail((error) => {
                console.log(error);
            });
        }

        function ClearForm() {
            $('#setId').html('');
            $('#setRequestDate').html('');
            $('#setFromDate').html('');
            $('#setUntilDate').html('');
            $('#itemList').html('');
            $('#notes').val('');
            $('#requestId').val('');           
        }        
        
        function Submit(condition){
            let state = """";
            if(condition==2){
                state = ""approve"";
            }else{
                state = ""reject"";
            }
            swal({
              title: 'Are you sure want to '+state+' this request?',
              text: ""You cann't undo this submit"",
     ");
                WriteLiteral(@"         icon: ""warning"",
              buttons: true,
              dangerMode: true,
            })
            .then((ok) => {
              if (ok) {
                swal({
                    title: ""Processing..."",
                    text: ""Please wait"",
                    button: false,
                    closeOnClickOutside: false,
                });        
                var Approve = new Object();
                Approve.RequestDetailStatus = condition;
                Approve.Note = $('#notes').val();
                Approve.RequestId = $('#requestId').val();
                    $.ajax({
                        type:'POST',
                        url: 'https://localhost:44342/manager/approving',
                        data: Approve
                    }).done((result) => {
                        console.log(result);
                        if (result == 200) {
                            swal({
                                title: ""Success!"",
                    ");
                WriteLiteral(@"            text: ""Success managing this request"",
                                icon: ""success""                        
                            });
                            ClearForm();
                            $('#detailsModal').modal('hide');
                            window.table.ajax.url('https://localhost:44342/Request/manager/2/incoming').load();                    
                        } 
                        else {
                              swal(""Failed to create request"", {
                                icon: ""warning"",
                            });               
                        }
                    }).fail((error) => {
                        console.log(error);
                    });

              } else {
                swal(""Please make sure your decision first!"");
              }
            });
        }  
");
            }
            );
            WriteLiteral(" ");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
