#pragma checksum "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\Requester\Request.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8d37267a832ea21f7339227fb846b3d55e292482"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Requester_Request), @"mvc.1.0.view", @"/Views/Requester/Request.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\_ViewImports.cshtml"
using MAS.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\_ViewImports.cshtml"
using MAS.Client.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\Requester\Request.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8d37267a832ea21f7339227fb846b3d55e292482", @"/Views/Requester/Request.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"58438fb03bc46bda326dff31745fed6749c862ce", @"/Views/_ViewImports.cshtml")]
    public class Views_Requester_Request : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\Requester\Request.cshtml"
  
    Layout = "~/Views/Template/DashboardBase.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"/vendor/datatables/css/dataTables.bootstrap4.min.css\">\r\n");
            }
            );
            DefineSection("Menu", async() => {
                WriteLiteral(@"
    <div class=""nav"">
        <div class=""sb-sidenav-menu-heading"">Employee</div>
        <a class=""nav-link"" href=""https://localhost:44342/employee"">
            <div class=""sb-nav-link-icon""><i class=""fas fa-home""></i></div>
            Dashboard
        </a>
        <a class=""nav-link"" href=""https://localhost:44342/employee/request"">
            <div class=""sb-nav-link-icon""><i class=""fas fa-book""></i></div>
            Request
        </a>
        <a class=""nav-link"" href=""https://localhost:44342/employee/invoice"">
            <div class=""sb-nav-link-icon""><i class=""fas fa-file-invoice""></i></div>
            Invoice
        </a>
    </div>
");
            }
            );
            WriteLiteral(@"<a href=""add/request"" class=""btn btn-sm btn-light text-dark mb-3"">
    <i class=""fas fa-plus-circle""></i> Add
</a>
<nav>
    <div class=""nav nav-tabs"" id=""nav-tab"" role=""tablist"">
        <a class=""nav-link text-dark active"" id=""current-data"" data-toggle=""tab"" href=""#card-data""
           role=""tab"" aria-controls=""card-data"" aria-selected=""true"">Current</a>
        <a class=""nav-link text-dark"" id=""ongoing-data"" data-toggle=""tab"" href=""#card-data""
           role=""tab"" aria-controls=""card-data"" aria-selected=""true"">On Going</a>
        <a class=""nav-link text-dark"" id=""rejected-data"" data-toggle=""tab"" href=""#data-tables""
           role=""tab"" aria-controls=""card-data"" aria-selected=""true"">Rejected</a>
    </div>
</nav>
<div class=""tab-content"" id=""nav-tabContent"">
    <div class=""tab-pane fade show active"" id=""card-data"" role=""tabpanel""
         aria-labelledby=""card-data-tab"">
        <div class=""wrap-request d-flex flex-wrap justify-content-between mt-3"" id=""listCardData"">

        </div>");
            WriteLiteral(@"
    </div>
    <div class=""tab-pane fade"" id=""data-tables"" role=""tabpanel"" aria-labelledby=""data-tables-tab"">
        <div class=""table-responsive mt-4"">
            <table class=""table table-bordered"" id=""myTable"" width=""100%"" cellspacing=""0"">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Requested On</th>                       
                        <th>Notes</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Id</th>
                        <th>Requested On</th>                       
                        <th>Notes</th>
                        <th>Action</th>
                    </tr>
                </tfoot>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Start Modal -->
<div class=""modal fade"" id=""detailsModal"" data-backdrop=""");
            WriteLiteral(@"static"" data-keyboard=""false"" tabindex=""-1""
     aria-labelledby=""detailsModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""detailsModalLabel"">Request Details</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" id=""closeModal"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <table cellpadding=""5"">
                    <tr>
                        <td>Request Id</td>
                        <td>:</td>
                        <td id=""setId""></td>
                    </tr>
                    <tr>
                        <td>Requested On</td>
                        <td>:</td>
                        <td id=""setRequestDate""></td>
                    </tr>
         ");
            WriteLiteral(@"           <tr>
                        <td>From</td>
                        <td>:</td>
                        <td id=""setFromDate""></td>
                    </tr>
                    <tr>
                        <td>Until</td>
                        <td>:</td>
                        <td id=""setUntilDate""></td>
                    </tr>
                </table>
                <hr>
                <h5>Items List</h5>
                <ol id=""itemList"">
                </ol>              
            </div>            
        </div>
    </div>
</div>
<!-- End Modal -->

");
            DefineSection("ScriptsLink", async() => {
                WriteLiteral("\r\n    <script src=\"/vendor/datatables/js/jquery.dataTables.min.js\"></script>\r\n    <script src=\"/vendor/datatables/js/dataTables.bootstrap4.min.js\"></script>\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("ScriptsDocReady", async() => {
                WriteLiteral("        \r\n        table = $(\'#myTable\').DataTable({                   \r\n            \"ajax\": {\r\n                \"type\":\"GET\",\r\n                \"url\": \'https://localhost:44329/api/Request/History/\'+\'rejected\'+\'/\'+");
#nullable restore
#line 125 "C:\RepoGithub\MCC\FINALPROJECT\PROJECT\MetroAssetSystem\MAS.Client\Views\Requester\Request.cshtml"
                                                                                Write(HttpContextAccessor.HttpContext.Session.GetString("Id"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                ""datatype"": ""json"",                
                ""dataSrc"" : """"
            },
            ""columnDefs"": [
                {
                    ""targets"": [0, 1],
                    ""searchable"": true,
                    ""orderable"": true,
                },
                {
                    ""targets"": [2, 3],
                    ""searchable"": false,
                    ""orderable"": false
                }
            ],
            ""columns"": [
                {
                    ""data"": 'requestId'
                },
                {
                    ""data"": 'date',
                    ""render"": function (data, type, row, meta) {
                        return moment(data, ""YYYY-MM-DD"").format(""DD MMMM YYYY"");
                    }                       
                },               
                {
                    ""data"": 'note'
                },
                {
                    ""data"": 'requestId',
                    ""render");
                WriteLiteral(@""": function (data, type, row, meta) {                      
                        return '<a href=""javascript:void(0)"" class=""btn btn-sm btn-light"" onclick=""Details(\'' + data + '\')""><i class=""far fa-check-square""></i></a>';        
                    }                                        
                }
            ]
        });

        $(""#current-data"").click(function () {
            LoadData(""current"");
        });
        $(""#ongoing-data"").click(function () {
            LoadData(""ongoing"");
        });   
");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    function LoadData(condition){
        var card = """";
        var status="""";
        $.get(""https://localhost:44342/Request/""+condition, function(result, status){
        }).fail(function() {
            alert( ""error"" );
        }).done(function(result) {
                if(result.length==0){
                    card+=""<p>No Data Available</p>"";
                }
                else
                {                    
                    $.each(result, function (i, field) {
                        var loanDate = moment(field.loanDate, 'YYYY-MM-DD').format('DD MMMM YYYY');
                        var returnDate = moment(field.returnDate, 'YYYY-MM-DD').format('DD MMMM YYYY');
                        if(field.requestStatus==0){
                        status+='<span class=""badge badge-sm text-warning"">'+
                            '<i class=""far fa-clock""></i> Waiting Approval Level 1'+
                            '</span>';
                        }else if(field.requestStatus==1){");
                WriteLiteral(@"
                        status+='<span class=""badge badge-sm text-warning"">'+
                            '<i class=""far fa-clock""></i> Waiting Approval Level 2'+
                            '</span>';
                        }else if(field.requestStatus==2){
                        status+='<span class=""badge badge-sm text-success"">'+
                            '<i class=""far fa-check-circle""></i> Approved'+
                            '</span>';
                        }else{
                        status+='<span class=""badge badge-sm text-primary"">'+
                            '<i class=""fas fa-location-arrow""></i> Processed'+
                            '</span>';
                        }
                        card+='<div class=""card text-white bg-dark mb-3 w-100 h-50"" style=""max-width: 18rem;"">'+
                            '<div class=""card-header d-flex justify-content-between p-2"">'+
                                '<h5 class=""text-primary"">#'+field.id+'</h5>'+
                 ");
                WriteLiteral(@"               '<p>01/01/2021</p>'+
                                '</div>'+
                            '<div class=""card-body p-2"">'+
                                '<p class=""my-0"">Status: '+status+'</p>'+
                                '<p class=""my-0"">Total Item : 1</p>'+
                                '<p class=""my-0"">From : '+loanDate+'</p>'+
                                '<p class=""my-0"">Until : '+returnDate+'</p>'+
                                '<a href=""javascript:void(0)"" class=""badge badge-sm badge-primary float-right"" data-toggle=""modal"" data-target=""#detailsModal""  onclick=""Details(\'' + field.id + '\')"">Detail</a>'+
                                '</div>'+
                            '</div>';
                        status="""";
                });
            }
            $('#listCardData').html(card);
        });       
    }

    function Details(id) {
            $.ajax({
                type: 'GET',
                url: 'https://localhost:44329/api/Request/' + ");
                WriteLiteral(@"id,
                data: 'data'
            }).done((result) => {
                if (result.status == ""Ok"") {
                    let hasil = """";
                    $('#detailsModal').modal('show');
                    $('#setId').html('#' + result.data.id);
                    $('#setRequestDate').html(moment(result.data.requestDate, ""YYYY-MM-DD"").format(""DD MMMM YYYY""));
                    $('#setFromDate').html(moment(result.data.loanDate, ""YYYY-MM-DD"").format(""DD MMMM YYYY""));
                    $('#setUntilDate').html(moment(result.data.returnDate, ""YYYY-MM-DD"").format(""DD MMMM YYYY""));      
                    $.each(result.data.itemRequest, function (key, field) {
                        hasil += '<li>#' + field.asset.id + ' - ' + field.asset.name + '</li>';
                    });             
                    $('#itemList').html(hasil);                 
                }
                else {
                    swal(""Failed to get data"", {
                        icon: ""wa");
                WriteLiteral("rning\",\r\n                    });\r\n                }\r\n            }).fail((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    \r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
